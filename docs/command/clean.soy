/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{namespace buck.clean}

/***/
{template .soyweb}
  {call buck.page}
    {param title: 'buck clean' /}
    {param navid: 'command_clean' /}
    {param description}
      Delete artifacts and state files generated by Buck.
    {/param}
    {param content}

{call buck.command}

{param overview}

<p>
  Delete artifacts and state files generated by Buck.
</p>

<p>
  Buck generates artifacts in the form of files and Buck also maintains
  its state using files. Deleting these files resets Buck's state
  so that the next build that runs is guaranteed to be a <em>clean build</em>. 
</p>

<p>
  The set of files that Buck generates and the location where Buck
  stores these files change over time because these are a function of
  the Build configuration and the version of Buck that you are
  using. However, the <code>buck clean</code> command always removes
  the appropriate set of files for your build and Buck version.
</p>


<h2>Do not manually try to modify the buck-out directory</h2>

<p>
  Buck primarily stores the state of your build in 
  the <code>buck-out</code> directory which is located in the root of 
  your {call buck.key_concepts_link}{param rendered_text: 'Buck project' /}{/call}.
  However, you should not try to manually modify the contents of <code>buck-out</code>. 
  Buck's implementation assumes that <code>buck-out</code> is not touched 
  by anything external to Buck.  If you modify <code>buck-out</code>, 
  Buck might behave in ways that are unpredictable.
</p>

{/param}

{param params}

{call buck.param}
  {param name: 'dry-run' /}
  {param desc}
    <p>
      Print a list of the directories that would be removed if the
      command ran normally.
    </p>
  {/param}
{/call}

{call buck.param}
  {param name: 'keep-cache' /}
  {param desc}
    <p>
      Keep the local (dir) caches. For more information about the local
      caches, see the {call buckconfig.cache /} section of <code>.buckconfig</code>.
    </p>
  {/param}
{/call}

{call command_common.common_param_xref /}

{/param}

{/call}

    {/param}  // content
  {/call} // buck.page
{/template}
