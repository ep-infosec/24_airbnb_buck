// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/facebook/buck/logd/proto/logdservice.proto

package com.facebook.buck.logd.proto;

/**
 * <pre>
 * Existing types of logs we are currently maintaining. To be revised/extended.
 * </pre>
 *
 * Protobuf enum {@code logd.v1.LogType}
 */
@javax.annotation.Generated(value="protoc", comments="annotations:LogType.java.pb.meta")
public enum LogType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>BUCK_LOG = 0;</code>
   */
  BUCK_LOG(0),
  /**
   * <code>BUCK_MACHINE_LOG = 1;</code>
   */
  BUCK_MACHINE_LOG(1),
  /**
   * <code>CHROME_TRACE_LOG = 2;</code>
   */
  CHROME_TRACE_LOG(2),
  /**
   * <code>SIMPLE_CONSOLE_LOG = 3;</code>
   */
  SIMPLE_CONSOLE_LOG(3),
  /**
   * <code>CRITICAL_PATH_LOG = 4;</code>
   */
  CRITICAL_PATH_LOG(4),
  /**
   * <code>RULE_KEY_LOG = 5;</code>
   */
  RULE_KEY_LOG(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>BUCK_LOG = 0;</code>
   */
  public static final int BUCK_LOG_VALUE = 0;
  /**
   * <code>BUCK_MACHINE_LOG = 1;</code>
   */
  public static final int BUCK_MACHINE_LOG_VALUE = 1;
  /**
   * <code>CHROME_TRACE_LOG = 2;</code>
   */
  public static final int CHROME_TRACE_LOG_VALUE = 2;
  /**
   * <code>SIMPLE_CONSOLE_LOG = 3;</code>
   */
  public static final int SIMPLE_CONSOLE_LOG_VALUE = 3;
  /**
   * <code>CRITICAL_PATH_LOG = 4;</code>
   */
  public static final int CRITICAL_PATH_LOG_VALUE = 4;
  /**
   * <code>RULE_KEY_LOG = 5;</code>
   */
  public static final int RULE_KEY_LOG_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LogType valueOf(int value) {
    return forNumber(value);
  }

  public static LogType forNumber(int value) {
    switch (value) {
      case 0: return BUCK_LOG;
      case 1: return BUCK_MACHINE_LOG;
      case 2: return CHROME_TRACE_LOG;
      case 3: return SIMPLE_CONSOLE_LOG;
      case 4: return CRITICAL_PATH_LOG;
      case 5: return RULE_KEY_LOG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LogType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LogType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LogType>() {
          public LogType findValueByNumber(int number) {
            return LogType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.facebook.buck.logd.proto.LogdServiceOuterFile.getDescriptor().getEnumTypes().get(0);
  }

  private static final LogType[] VALUES = values();

  public static LogType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private LogType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:logd.v1.LogType)
}

